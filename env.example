# Activity Summary Generator - Environment Configuration

# =============================================================================
# API INTEGRATIONS
# =============================================================================

# GitLab Integration
GITLAB_ENABLED=true
GITLAB_BASE_URL=https://gitlab.com
GITLAB_ACCESS_TOKEN=your_gitlab_access_token_here
GITLAB_PROJECT_IDS=project1,project2
# Optional: Control GitLab project fetch concurrency (default: 5)
GITLAB_PROJECT_CONCURRENCY=5
# Optional: Control what GitLab data to fetch (all default to true)
GITLAB_FETCH_COMMITS=true
GITLAB_FETCH_COMMENTS=true
GITLAB_FETCH_ISSUES=true
GITLAB_FETCH_MR_NOTES=true
# Optional: If false, disables all note/comment fetching from GitLab (blanket flag)
GITLAB_FETCH_NOTES=true
# Optional: If false, disables all nested fetching (comments, notes, etc) from GitLab
GITLAB_FETCH_NESTED=true

# Slack Integration
SLACK_ENABLED=true
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token-here
SLACK_CHANNEL_IDS=C1234567890,C0987654321
# NEW: Required for user filtering - only fetch messages from this user
SLACK_USER_EMAIL=your_email@domain.com

# Microsoft Teams Integration
TEAMS_ENABLED=true
TEAMS_CLIENT_ID=your_azure_app_client_id
TEAMS_CLIENT_SECRET=your_azure_app_client_secret
TEAMS_TENANT_ID=your_azure_tenant_id
TEAMS_EMAIL=your_email@domain.com

# Jira Integration
JIRA_ENABLED=true
JIRA_BASE_URL=https://your-domain.atlassian.net
JIRA_EMAIL=your_email@domain.com
JIRA_API_TOKEN=your_jira_api_token_here
JIRA_PROJECT_KEYS=PROJ1,PROJ2
JIRA_ISSUE_TYPES=Task,Bug,Story

# =============================================================================
# AI PROVIDERS FOR SUMMARY GENERATION
# =============================================================================

# OpenAI Configuration
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_MODEL=gpt-4o
OPENAI_BASE_URL=https://api.openai.com/v1

# Anthropic Configuration
ANTHROPIC_API_KEY=sk-ant-your-anthropic-api-key-here
ANTHROPIC_MODEL=claude-3-haiku-20240307

# Google Gemini Configuration
GOOGLE_API_KEY=your-google-api-key-here
GOOGLE_MODEL=gemini-1.5-flash

# Ollama Configuration (Local)
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=llama2

# Hugging Face Configuration
HUGGINGFACE_API_KEY=hf-your-huggingface-api-key-here
HUGGINGFACE_MODEL=microsoft/DialoGPT-medium

# Open WebUI Configuration
OPENWEBUI_BASE_URL=http://localhost:8080
OPENWEBUI_MODEL=llama2
OPENWEBUI_API_KEY=your-openwebui-api-key-here

# =============================================================================
# NOTES
# =============================================================================

# 1. Copy this file to .env.local and fill in your actual values
# 2. Never commit .env.local to version control
# 3. For AI summaries, you only need to configure the providers you want to use
# 4. The application will automatically select the first available provider
# 5. You can specify a provider using --provider flag when generating summaries

# =============================================================================
# AI PROVIDER SETUP INSTRUCTIONS
# =============================================================================

# OpenAI:
# 1. Sign up at https://platform.openai.com/
# 2. Create an API key
# 3. Set OPENAI_API_KEY

# Anthropic:
# 1. Sign up at https://console.anthropic.com/
# 2. Create an API key
# 3. Set ANTHROPIC_API_KEY

# Google Gemini:
# 1. Go to https://makersuite.google.com/app/apikey
# 2. Create an API key
# 3. Set GOOGLE_API_KEY

# Ollama (Local):
# 1. Install Ollama from https://ollama.ai/
# 2. Run: ollama pull llama2
# 3. Set OLLAMA_BASE_URL (default: http://localhost:11434)

# Hugging Face:
# 1. Sign up at https://huggingface.co/
# 2. Create an API token
# 3. Set HUGGINGFACE_API_KEY

# Open WebUI:
# 1. Install and run Open WebUI (https://github.com/open-webui/open-webui)
# 2. Ensure it exposes an OpenAI-compatible API at /v1/chat/completions
# 3. Set OPENWEBUI_BASE_URL to your Open WebUI instance URL
# 4. Set OPENWEBUI_MODEL to the model name you want to use
# 5. Optionally set OPENWEBUI_API_KEY if authentication is enabled

# Application Configuration
NODE_ENV=development
LOG_LEVEL=info

# Output Directory Configuration
# Directory for activity data files (default: activities)
ACTIVITIES_OUTPUT_DIR=activities

# Directory for AI summary files (default: ai-summaries)
AI_SUMMARIES_OUTPUT_DIR=ai-summaries
